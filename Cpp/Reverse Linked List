/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* curr, ListNode* prev) {
        if (curr == nullptr) {
            return prev;
        }
        ListNode* temp = curr->next;
        curr->next = prev;
        prev = curr;
        curr = temp;
        return reverseList(curr, prev);
    }
    ListNode* reverseList(ListNode* head) {
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        cout.tie(NULL);
        /*ListNode* prev = nullptr;
        ListNode* curr = head;
        ListNode* temp;
        while (curr != nullptr) {
            temp = curr->next;
            curr->next = prev;
            prev = curr;
            curr = temp;
        }
        return prev;*/
        return reverseList(head, nullptr);
    }
};
