/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        queue<TreeNode*> queue;
        vector<vector<int>> list;
        if (root == nullptr) {
            return list;
        }
        queue.push(root);
        while (!queue.empty()) {
            int n = queue.size();
            vector<int> l;
            while (n-- > 0) {
                TreeNode* nn = queue.front();
                queue.pop();
                if (nn->left != nullptr)
                    queue.push(nn->left);
                if (nn->right != nullptr)
                    queue.push(nn->right);
                l.push_back(nn->val);
            }
            list.push_back(l);
        }
        return list;
    }
};
