/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {
    public boolean ans = false;

    public void recursion(TreeNode root, int sum) {
        if (root.left == null && root.right == null) {
            if (sum - root.val == 0)
                ans = true;
            else {
                return;
            }
        }
        if (root.left != null)
            recursion(root.left, sum - root.val);
        if (root.right != null)
            recursion(root.right, sum - root.val);
    }

    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (root != null)
            recursion(root, targetSum);
        return ans;
    }
}
