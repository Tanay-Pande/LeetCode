/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        List<List<Integer>> list = new ArrayList<>();
        if(root==null){
            return list;
        }
        queue.add(root);
        while(!queue.isEmpty()){
            int n = queue.size();
            List<Integer> l = new ArrayList<>();
            while(n-- > 0){
                TreeNode nn = queue.poll();
                if(nn.left!=null) queue.add(nn.left);
                if(nn.right!=null) queue.add(nn.right);
                l.add(nn.val);
            }
            list.add(new ArrayList<>(l));
        }
        return list;
    }
}
